name: uracil
version: 0.1.0.0
synopsis: neovim register manager
description: Please see the README on GitHub at <https://github.com/tek/uracil>
github: "tek/uracil"
license: MIT
license-file: LICENSE
author: "Torsten Schmits"
maintainer: "tek@tryp.io"
copyright: "2019 Torsten Schmits"
category: Neovim
build-type: Simple

extra-source-files:
- README.md

dependencies:
- aeson
- attoparsec
- base-noprelude >= 4.7 && < 5
- bytestring
- chiasma
- composition-extra
- conduit
- conduit-extra
- containers
- cornea
- data-default
- deepseq
- directory
- either
- exceptions
- filepath
- free
- hourglass
- hslogger
- lens
- lifted-base
- messagepack
- monad-control
- mtl
- network
- nvim-hs
- parsec
- parsers
- path
- path-io
- prettyprinter
- process
- rawstring-qm
- regex-with-pcre
- relude
- resourcet
- ribosome
- split
- stm-chans
- stm-conduit
- strings
- stringsearch
- text
- transformers
- transformers-base
- typed-process
- unix
- unliftio
- unliftio-core
- utf8-string
- uuid
- vector

library:
 source-dirs: lib

executables:
 uracil:
  main: Main.hs
  source-dirs: app
  ghc-options:
  - -threaded
  - -rtsopts
  - -with-rtsopts=-N
  dependencies:
  - uracil

tests:
  uracil-unit:
    main: SpecMain.hs
    source-dirs: test/u
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - uracil
    - ribosome-test
    - HTF

default-extensions:
- AutoDeriveTypeable
- BangPatterns
- BinaryLiterals
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveDataTypeable
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveTraversable
- DoAndIfThenElse
- EmptyDataDecls
- ExistentialQuantification
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- InstanceSigs
- KindSignatures
- LambdaCase
- MonadFailDesugaring
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- OverloadedStrings
- PartialTypeSignatures
- PatternGuards
- PolyKinds
- QuasiQuotes
- RankNTypes
- RecordWildCards
- ScopedTypeVariables
- StandaloneDeriving
- TemplateHaskell
- TupleSections
- TypeApplications
- TypeFamilies
- TypeSynonymInstances
- UnicodeSyntax
- ViewPatterns
